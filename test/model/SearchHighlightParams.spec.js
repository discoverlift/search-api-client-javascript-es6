/*
 * Search API
 * This is the API for getting search results.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: ajit.singh@discoverlift.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UpliftSearchClientJavascript);
  }
}(this, function(expect, UpliftSearchClientJavascript) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SearchHighlightParams', function() {
      beforeEach(function() {
        instance = new UpliftSearchClientJavascript.SearchHighlightParams();
      });

      it('should create an instance of SearchHighlightParams', function() {
        // TODO: update the code to test SearchHighlightParams
        expect(instance).to.be.a(UpliftSearchClientJavascript.SearchHighlightParams);
      });

      it('should have the property attributeNames (base name: "attributeNames")', function() {
        // TODO: update the code to test the property attributeNames
        expect(instance).to.have.property('attributeNames');
        // expect(instance.attributeNames).to.be(expectedValueLiteral);
      });

      it('should have the property preTag (base name: "preTag")', function() {
        // TODO: update the code to test the property preTag
        expect(instance).to.have.property('preTag');
        // expect(instance.preTag).to.be(expectedValueLiteral);
      });

      it('should have the property postTag (base name: "postTag")', function() {
        // TODO: update the code to test the property postTag
        expect(instance).to.have.property('postTag');
        // expect(instance.postTag).to.be(expectedValueLiteral);
      });

    });
  });

}));
