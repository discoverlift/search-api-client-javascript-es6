/**
 * Catalog API
 * This is the API for retrieving items from your catalog.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: ajit.singh@discoverlift.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Document from './model/Document';
import FacetParams from './model/FacetParams';
import FacetResponse from './model/FacetResponse';
import FacetResponseValues from './model/FacetResponseValues';
import FetchParams from './model/FetchParams';
import FetchRequest from './model/FetchRequest';
import FetchResponse from './model/FetchResponse';
import HighlightResponse from './model/HighlightResponse';
import PaginationParams from './model/PaginationParams';
import PersonalizationParams from './model/PersonalizationParams';
import QueryPerformance from './model/QueryPerformance';
import RankingParams from './model/RankingParams';
import RequestParams from './model/RequestParams';
import SearchHighlightParams from './model/SearchHighlightParams';
import SearchParams from './model/SearchParams';
import SearchRequest from './model/SearchRequest';
import SearchResponse from './model/SearchResponse';
import SuggestHighlightParams from './model/SuggestHighlightParams';
import SuggestParams from './model/SuggestParams';
import SuggestParamsSuggestionSource from './model/SuggestParamsSuggestionSource';
import SuggestRequest from './model/SuggestRequest';
import SuggestResponse from './model/SuggestResponse';
import FetchApi from './api/FetchApi';
import SearchApi from './api/SearchApi';
import SuggestApi from './api/SuggestApi';


/**
* Uplift Catalog API Client.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var UpliftCatalogClientJavascript = require('index'); // See note below*.
* var xxxSvc = new UpliftCatalogClientJavascript.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new UpliftCatalogClientJavascript.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new UpliftCatalogClientJavascript.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new UpliftCatalogClientJavascript.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.2.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document,

    /**
     * The FacetParams model constructor.
     * @property {module:model/FacetParams}
     */
    FacetParams,

    /**
     * The FacetResponse model constructor.
     * @property {module:model/FacetResponse}
     */
    FacetResponse,

    /**
     * The FacetResponseValues model constructor.
     * @property {module:model/FacetResponseValues}
     */
    FacetResponseValues,

    /**
     * The FetchParams model constructor.
     * @property {module:model/FetchParams}
     */
    FetchParams,

    /**
     * The FetchRequest model constructor.
     * @property {module:model/FetchRequest}
     */
    FetchRequest,

    /**
     * The FetchResponse model constructor.
     * @property {module:model/FetchResponse}
     */
    FetchResponse,

    /**
     * The HighlightResponse model constructor.
     * @property {module:model/HighlightResponse}
     */
    HighlightResponse,

    /**
     * The PaginationParams model constructor.
     * @property {module:model/PaginationParams}
     */
    PaginationParams,

    /**
     * The PersonalizationParams model constructor.
     * @property {module:model/PersonalizationParams}
     */
    PersonalizationParams,

    /**
     * The QueryPerformance model constructor.
     * @property {module:model/QueryPerformance}
     */
    QueryPerformance,

    /**
     * The RankingParams model constructor.
     * @property {module:model/RankingParams}
     */
    RankingParams,

    /**
     * The RequestParams model constructor.
     * @property {module:model/RequestParams}
     */
    RequestParams,

    /**
     * The SearchHighlightParams model constructor.
     * @property {module:model/SearchHighlightParams}
     */
    SearchHighlightParams,

    /**
     * The SearchParams model constructor.
     * @property {module:model/SearchParams}
     */
    SearchParams,

    /**
     * The SearchRequest model constructor.
     * @property {module:model/SearchRequest}
     */
    SearchRequest,

    /**
     * The SearchResponse model constructor.
     * @property {module:model/SearchResponse}
     */
    SearchResponse,

    /**
     * The SuggestHighlightParams model constructor.
     * @property {module:model/SuggestHighlightParams}
     */
    SuggestHighlightParams,

    /**
     * The SuggestParams model constructor.
     * @property {module:model/SuggestParams}
     */
    SuggestParams,

    /**
     * The SuggestParamsSuggestionSource model constructor.
     * @property {module:model/SuggestParamsSuggestionSource}
     */
    SuggestParamsSuggestionSource,

    /**
     * The SuggestRequest model constructor.
     * @property {module:model/SuggestRequest}
     */
    SuggestRequest,

    /**
     * The SuggestResponse model constructor.
     * @property {module:model/SuggestResponse}
     */
    SuggestResponse,

    /**
    * The FetchApi service constructor.
    * @property {module:api/FetchApi}
    */
    FetchApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The SuggestApi service constructor.
    * @property {module:api/SuggestApi}
    */
    SuggestApi
};
