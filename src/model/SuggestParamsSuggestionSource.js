/*
 * Search API
 * This is the API for getting search results.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: ajit.singh@discoverlift.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UpliftSearchClientJavascript) {
      root.UpliftSearchClientJavascript = {};
    }
    root.UpliftSearchClientJavascript.SuggestParamsSuggestionSource = factory(root.UpliftSearchClientJavascript.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SuggestParamsSuggestionSource model module.
   * @module model/SuggestParamsSuggestionSource
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>SuggestParamsSuggestionSource</code>.
   * Describe the source of suggestions
   * @alias module:model/SuggestParamsSuggestionSource
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SuggestParamsSuggestionSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SuggestParamsSuggestionSource} obj Optional instance to populate.
   * @return {module:model/SuggestParamsSuggestionSource} The populated <code>SuggestParamsSuggestionSource</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('sourceName'))
        obj.sourceName = ApiClient.convertToType(data['sourceName'], 'String');
      if (data.hasOwnProperty('attributeName'))
        obj.attributeName = ApiClient.convertToType(data['attributeName'], 'String');
    }
    return obj;
  }

  /**
   * @member {module:model/SuggestParamsSuggestionSource.SourceNameEnum} sourceName
   */
  exports.prototype.sourceName = undefined;

  /**
   * Attribute to be used as source of suggestions
   * @member {String} attributeName
   */
  exports.prototype.attributeName = undefined;


  /**
   * Allowed values for the <code>sourceName</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SourceNameEnum = {
    /**
     * value: "recentSearchesByUser"
     * @const
     */
    recentSearchesByUser: "recentSearchesByUser",

    /**
     * value: "topSearches"
     * @const
     */
    topSearches: "topSearches",

    /**
     * value: "attribute"
     * @const
     */
    attribute: "attribute"
  };

  return exports;

}));
