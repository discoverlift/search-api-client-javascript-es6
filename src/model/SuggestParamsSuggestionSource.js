/**
 * Catalog API
 * This is the API for retrieving items from your catalog.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: ajit.singh@discoverlift.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SuggestParamsSuggestionSource model module.
 * @module model/SuggestParamsSuggestionSource
 * @version 1.2.2
 */
class SuggestParamsSuggestionSource {
    /**
     * Constructs a new <code>SuggestParamsSuggestionSource</code>.
     * Describe the source of suggestions
     * @alias module:model/SuggestParamsSuggestionSource
     */
    constructor() { 
        
        SuggestParamsSuggestionSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SuggestParamsSuggestionSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuggestParamsSuggestionSource} obj Optional instance to populate.
     * @return {module:model/SuggestParamsSuggestionSource} The populated <code>SuggestParamsSuggestionSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuggestParamsSuggestionSource();

            if (data.hasOwnProperty('sourceName')) {
                obj['sourceName'] = ApiClient.convertToType(data['sourceName'], 'String');
            }
            if (data.hasOwnProperty('attributeName')) {
                obj['attributeName'] = ApiClient.convertToType(data['attributeName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SuggestParamsSuggestionSource.SourceNameEnum} sourceName
 */
SuggestParamsSuggestionSource.prototype['sourceName'] = undefined;

/**
 * Attribute to be used as source of suggestions
 * @member {String} attributeName
 */
SuggestParamsSuggestionSource.prototype['attributeName'] = undefined;





/**
 * Allowed values for the <code>sourceName</code> property.
 * @enum {String}
 * @readonly
 */
SuggestParamsSuggestionSource['SourceNameEnum'] = {

    /**
     * value: "recentSearchesByUser"
     * @const
     */
    "recentSearchesByUser": "recentSearchesByUser",

    /**
     * value: "topSearches"
     * @const
     */
    "topSearches": "topSearches",

    /**
     * value: "attribute"
     * @const
     */
    "attribute": "attribute"
};



export default SuggestParamsSuggestionSource;

