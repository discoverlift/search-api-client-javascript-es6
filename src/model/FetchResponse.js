/**
 * Catalog API
 * This is the API for retrieving items from your catalog.
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: ajit.singh@discoverlift.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Document', 'model/FetchParams', 'model/QueryPerformance'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Document'), require('./FetchParams'), require('./QueryPerformance'));
  } else {
    // Browser globals (root is window)
    if (!root.UpliftCatalogClientJavascript) {
      root.UpliftCatalogClientJavascript = {};
    }
    root.UpliftCatalogClientJavascript.FetchResponse = factory(root.UpliftCatalogClientJavascript.ApiClient, root.UpliftCatalogClientJavascript.Document, root.UpliftCatalogClientJavascript.FetchParams, root.UpliftCatalogClientJavascript.QueryPerformance);
  }
}(this, function(ApiClient, Document, FetchParams, QueryPerformance) {
  'use strict';



  /**
   * The FetchResponse model module.
   * @module model/FetchResponse
   * @version 1.3.0
   */

  /**
   * Constructs a new <code>FetchResponse</code>.
   * @alias module:model/FetchResponse
   * @class
   * @param performance {module:model/QueryPerformance} 
   * @param result {module:model/Document} 
   */
  var exports = function(performance, result) {
    var _this = this;

    _this['performance'] = performance;
    _this['result'] = result;
  };

  /**
   * Constructs a <code>FetchResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FetchResponse} obj Optional instance to populate.
   * @return {module:model/FetchResponse} The populated <code>FetchResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('performance')) {
        obj['performance'] = QueryPerformance.constructFromObject(data['performance']);
      }
      if (data.hasOwnProperty('result')) {
        obj['result'] = Document.constructFromObject(data['result']);
      }
      if (data.hasOwnProperty('fetchParams')) {
        obj['fetchParams'] = FetchParams.constructFromObject(data['fetchParams']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/QueryPerformance} performance
   */
  exports.prototype['performance'] = undefined;
  /**
   * @member {module:model/Document} result
   */
  exports.prototype['result'] = undefined;
  /**
   * @member {module:model/FetchParams} fetchParams
   */
  exports.prototype['fetchParams'] = undefined;



  return exports;
}));


