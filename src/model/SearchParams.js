/**
 * Catalog API
 * This is the API for retrieving items from your catalog.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: ajit.singh@discoverlift.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FacetParams', 'model/PaginationParams', 'model/PersonalizationParams', 'model/RankingParams', 'model/SearchHighlightParams'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FacetParams'), require('./PaginationParams'), require('./PersonalizationParams'), require('./RankingParams'), require('./SearchHighlightParams'));
  } else {
    // Browser globals (root is window)
    if (!root.UpliftCatalogClientJavascript) {
      root.UpliftCatalogClientJavascript = {};
    }
    root.UpliftCatalogClientJavascript.SearchParams = factory(root.UpliftCatalogClientJavascript.ApiClient, root.UpliftCatalogClientJavascript.FacetParams, root.UpliftCatalogClientJavascript.PaginationParams, root.UpliftCatalogClientJavascript.PersonalizationParams, root.UpliftCatalogClientJavascript.RankingParams, root.UpliftCatalogClientJavascript.SearchHighlightParams);
  }
}(this, function(ApiClient, FacetParams, PaginationParams, PersonalizationParams, RankingParams, SearchHighlightParams) {
  'use strict';



  /**
   * The SearchParams model module.
   * @module model/SearchParams
   * @version 1.2.2
   */

  /**
   * Constructs a new <code>SearchParams</code>.
   * @alias module:model/SearchParams
   * @class
   * @param attributesToRetrieve {Array.<String>} List of attributes to return for each document. By default, returns all attributes. Returning all attributes can increase response size and latency.
   * @param language {String} Language iso code
   * @param paginationParams {module:model/PaginationParams} 
   * @param rankingParams {module:model/RankingParams} 
   * @param personalizationParams {module:model/PersonalizationParams} 
   */
  var exports = function(attributesToRetrieve, language, paginationParams, rankingParams, personalizationParams) {
    var _this = this;

    _this['attributesToRetrieve'] = attributesToRetrieve;
    _this['language'] = language;
    _this['paginationParams'] = paginationParams;
    _this['rankingParams'] = rankingParams;
    _this['personalizationParams'] = personalizationParams;
  };

  /**
   * Constructs a <code>SearchParams</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchParams} obj Optional instance to populate.
   * @return {module:model/SearchParams} The populated <code>SearchParams</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('keyphrase')) {
        obj['keyphrase'] = ApiClient.convertToType(data['keyphrase'], 'String');
      }
      if (data.hasOwnProperty('attributesToRetrieve')) {
        obj['attributesToRetrieve'] = ApiClient.convertToType(data['attributesToRetrieve'], ['String']);
      }
      if (data.hasOwnProperty('language')) {
        obj['language'] = ApiClient.convertToType(data['language'], 'String');
      }
      if (data.hasOwnProperty('facets')) {
        obj['facets'] = FacetParams.constructFromObject(data['facets']);
      }
      if (data.hasOwnProperty('filters')) {
        obj['filters'] = ApiClient.convertToType(data['filters'], 'String');
      }
      if (data.hasOwnProperty('highlightParams')) {
        obj['highlightParams'] = SearchHighlightParams.constructFromObject(data['highlightParams']);
      }
      if (data.hasOwnProperty('paginationParams')) {
        obj['paginationParams'] = PaginationParams.constructFromObject(data['paginationParams']);
      }
      if (data.hasOwnProperty('rankingParams')) {
        obj['rankingParams'] = RankingParams.constructFromObject(data['rankingParams']);
      }
      if (data.hasOwnProperty('personalizationParams')) {
        obj['personalizationParams'] = PersonalizationParams.constructFromObject(data['personalizationParams']);
      }
    }
    return obj;
  }

  /**
   * Query keyphrase. Empty keyphrase means return all documents.
   * @member {String} keyphrase
   */
  exports.prototype['keyphrase'] = undefined;
  /**
   * List of attributes to return for each document. By default, returns all attributes. Returning all attributes can increase response size and latency.
   * @member {Array.<String>} attributesToRetrieve
   */
  exports.prototype['attributesToRetrieve'] = undefined;
  /**
   * Language iso code
   * @member {String} language
   */
  exports.prototype['language'] = undefined;
  /**
   * @member {module:model/FacetParams} facets
   */
  exports.prototype['facets'] = undefined;
  /**
   * Filters for search. Follow same language as Algolia (https://www.algolia.com/doc/api-reference/api-parameters/filters/). Implemented using pyparse (https://stackoverflow.com/questions/11133339/parsing-a-complex-logical-expression-in-pyparsing-in-a-binary-tree-fashion)
   * @member {String} filters
   */
  exports.prototype['filters'] = undefined;
  /**
   * @member {module:model/SearchHighlightParams} highlightParams
   */
  exports.prototype['highlightParams'] = undefined;
  /**
   * @member {module:model/PaginationParams} paginationParams
   */
  exports.prototype['paginationParams'] = undefined;
  /**
   * @member {module:model/RankingParams} rankingParams
   */
  exports.prototype['rankingParams'] = undefined;
  /**
   * @member {module:model/PersonalizationParams} personalizationParams
   */
  exports.prototype['personalizationParams'] = undefined;



  return exports;
}));


